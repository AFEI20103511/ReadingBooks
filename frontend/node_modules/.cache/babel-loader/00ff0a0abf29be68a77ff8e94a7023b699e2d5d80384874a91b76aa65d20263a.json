{"ast":null,"code":"var _jsxFileName = \"/Users/zhengzhang/Desktop/MyDev/ReadingBooks/frontend/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FiUploadCloud } from 'react-icons/fi'; // Modern Apple-style icon\nimport axios from 'axios'; // Added axios for real backend call\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  // State to track upload progress and status messages\n  const [uploading, setUploading] = useState(false);\n  const [status, setStatus] = useState('');\n\n  // Callback function that handles file upload when files are dropped or selected\n  const onDrop = useCallback(async acceptedFiles => {\n    // If no files were accepted, exit early\n    if (acceptedFiles.length === 0) return;\n\n    // Get the first file (we only accept one file at a time)\n    const file = acceptedFiles[0];\n\n    // Create FormData to send file to backend\n    const formData = new FormData();\n    formData.append('file', file);\n\n    // Update UI to show upload in progress\n    setUploading(true);\n    setStatus('Uploading...');\n    try {\n      // Send file to backend API endpoint\n      const response = await axios.post('http://localhost:8000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Show success message\n      setStatus('Upload successful!');\n      console.log('Backend response:', response.data);\n    } catch (error) {\n      // Show error message if upload fails\n      setStatus('Upload failed.');\n      console.error('Upload error:', error);\n    } finally {\n      // Always reset upload state when done\n      setUploading(false);\n    }\n  }, []);\n\n  // Configure dropzone with specific settings\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    open\n  } = useDropzone({\n    onDrop,\n    // Function to call when files are dropped\n    accept: {\n      'application/pdf': ['.pdf']\n    },\n    // Only accept PDF files\n    multiple: false,\n    // Only allow one file at a time\n    noClick: true // Disable click to open file dialog (we use custom button)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...getRootProps(),\n    className: `upload-area${isDragActive ? ' drag-active' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...getInputProps()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FiUploadCloud, {\n      className: \"upload-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Drag & drop a PDF file here\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#888',\n          fontSize: '0.95em'\n        },\n        children: \"or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"upload-btn\",\n      onClick: open,\n      disabled: uploading,\n      children: \"Choose File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-status\",\n      children: \"Uploading\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }, this), status && !uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"I9pTet4ctl7YU6rOYUs09gePFoc=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","FiUploadCloud","axios","jsxDEV","_jsxDEV","FileUpload","_s","uploading","setUploading","status","setStatus","onDrop","acceptedFiles","length","file","formData","FormData","append","response","post","headers","console","log","data","error","getRootProps","getInputProps","isDragActive","open","accept","multiple","noClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontSize","type","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/zhengzhang/Desktop/MyDev/ReadingBooks/frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { FiUploadCloud } from 'react-icons/fi'; // Modern Apple-style icon\nimport axios from 'axios'; // Added axios for real backend call\n\nfunction FileUpload() {\n  // State to track upload progress and status messages\n  const [uploading, setUploading] = useState(false);\n  const [status, setStatus] = useState('');\n\n  // Callback function that handles file upload when files are dropped or selected\n  const onDrop = useCallback(async (acceptedFiles) => {\n    // If no files were accepted, exit early\n    if (acceptedFiles.length === 0) return;\n    \n    // Get the first file (we only accept one file at a time)\n    const file = acceptedFiles[0];\n    \n    // Create FormData to send file to backend\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    // Update UI to show upload in progress\n    setUploading(true);\n    setStatus('Uploading...');\n    \n    try {\n      // Send file to backend API endpoint\n      const response = await axios.post('http://localhost:8000/upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      \n      // Show success message\n      setStatus('Upload successful!');\n      console.log('Backend response:', response.data);\n    } catch (error) {\n      // Show error message if upload fails\n      setStatus('Upload failed.');\n      console.error('Upload error:', error);\n    } finally {\n      // Always reset upload state when done\n      setUploading(false);\n    }\n  }, []);\n\n  // Configure dropzone with specific settings\n  const { getRootProps, getInputProps, isDragActive, open } = useDropzone({\n    onDrop,                                    // Function to call when files are dropped\n    accept: { 'application/pdf': ['.pdf'] },   // Only accept PDF files\n    multiple: false,                           // Only allow one file at a time\n    noClick: true,                            // Disable click to open file dialog (we use custom button)\n  });\n\n  return (\n    <div {...getRootProps()} className={`upload-area${isDragActive ? ' drag-active' : ''}`}>\n      {/* Hidden file input that dropzone manages */}\n      <input {...getInputProps()} />\n      \n      {/* Upload icon */}\n      <FiUploadCloud className=\"upload-icon\" />\n      \n      {/* Instructions for user */}\n      <p>\n        Drag & drop a PDF file here\n        <br />\n        <span style={{ color: '#888', fontSize: '0.95em' }}>or</span>\n      </p>\n      \n      {/* Custom button to open file dialog */}\n      <button type=\"button\" className=\"upload-btn\" onClick={open} disabled={uploading}>\n        Choose File\n      </button>\n      \n      {/* Show upload progress */}\n      {uploading && <div className=\"upload-status\">Uploadingâ€¦</div>}\n      \n      {/* Show status message (success/error) */}\n      {status && !uploading && <div className=\"upload-status\">{status}</div>}\n    </div>\n  );\n}\n\nexport default FileUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}